record.service.ts:
import { Injectable } from '@angular/core';
import { Http } from '@angular/http';
import { Observable } from 'rxjs/Observable';

@Injectable()
export class RecordsService {

  constructor(private http: Http){ }

  getRecords(dateBeginUnix, dateEndUnix): Observable<any> {
  	console.log(dateBeginUnix, dateEndUnix);
  	let result = this.http.get('http://127.0.0.1:8000/days/' + dateBeginUnix + '/' + dateEndUnix);
  	console.log('result', result);
  	return result;
  } 

}



================+
component:
import { Component, OnInit } from '@angular/core';

import { IMyDpOptions } from 'mydatepicker';
import { RecordsService } from '../records.service';

@Component({
  selector: 'app-panel',
  templateUrl: './panel.component.html',
  styleUrls: ['./panel.component.css']
})
export class PanelComponent implements OnInit {

  constructor(private recordsService: RecordsService) { }

  ngOnInit() {
  }  

  private myDatePickerOptions: IMyDpOptions = {
      // other options...
      dateFormat: 'dd.mm.yyyy',
  };

  private modelDateBegin: Object;  
  private modelDateEnd: Object;  
  private records: Object;  
  private data: Object;  

  displayStatistic() {
    this.recordsService
        .getRecords(this.modelDateBegin['epoc'], this.modelDateBegin['epoc'])
        .subscribe((data: Response) => this.records = data.json());

        //.subscribe((data: Response) => this.user=data.json());
  }

}

суть в том, что возвращаемый объект в сервисе должен быть типа Observable.
при этом этот тип нужно подключить


================+
================+
================+
================+
================+
================+
================+
================+
================+
================+
================+
================+
================+
================+