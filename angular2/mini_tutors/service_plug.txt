подключим в компонент простейший сервис, который возвращает сроку.
сначала создадим его:
ng g s records

=================================+
затем подключим в модуле:
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { HttpModule } from '@angular/http';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { PanelComponent } from './panel/panel.component';
import { MyDatePickerModule } from 'mydatepicker';
import { RecordsService } from './records.service';

@NgModule({
  declarations: [
    AppComponent,
    PanelComponent
  ],
  imports: [
    MyDatePickerModule,
    BrowserModule,
    FormsModule,
    HttpModule,
    AppRoutingModule
  ],
  providers: [RecordsService],
  bootstrap: [AppComponent]
})
export class AppModule { }


=================================+
сформируем сам сервис в records.service.ts:
import { Injectable } from '@angular/core';

@Injectable()
export class RecordsService {

  constructor() { }

  getRecords(): String {
  	return 'okk';
  } 

}



=================================+
подключим в компонент:
import { Component, OnInit } from '@angular/core';

import { IMyDpOptions } from 'mydatepicker';
import { RecordsService } from '../records.service';

@Component({
  selector: 'app-panel',
  templateUrl: './panel.component.html',
  styleUrls: ['./panel.component.css']
})
export class PanelComponent implements OnInit {

  constructor(private recordsService: RecordsService) { }

  ngOnInit() {
  }  

  displayStatistic() {
    this.records = this.recordsService.getRecords();
    console.log(this.records);
  }

}


=================================+
=================================+
=================================+
=================================+
=================================+
=================================+
=================================+
=================================+