если нужно программно перейти на новый url, то нужно использовать withRouter:

	import React from 'react';
	import { withRouter } from 'react-router-dom'


	class Page1 extends React.Component {
	    constructor(props) {
	        super(props);
	        this.whereRef = React.createRef();
	    }

	    render() {
	        return <div>
	            <label htmlFor="where">enter page nember: </label>
	            <input type="number" id="where" ref={this.whereRef} />
	            <button id="goBtn" onClick={this.go.bind(this)}>go</button>
	        </div>;
	    }

	    go() {
	        const id = this.whereRef.current.value;
	        if(id) {
	            console.log('=====', id, typeof id)
	            this.props.history.push("/page2")
	        }
	    }
	}


	export default withRouter(Page1);



==========================================
чтобы передать необязательный параметр роута:
 	<Route exact path='/page3/:message?' render={ () => <Page3 /> }/>

 передавать при переходе так:
 	this.props.history.push(`/page${id}/${message}`)

 принимать на целевой страничке так:
 	import { useParams } from "react-router-dom";
    let { message } = useParams();
    console.log(message); 	

==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================
==========================================