Чтобы отобразить веб страницу, браузер отправляет начальный запрос для получения HTML-документа этой страницы. После этого браузер изучает этот документ, и запрашивает дополнительные файлы, необходимые для отбражения содержания веб-страницы (исполняемые скрипты, информацию о макете страницы - CSS таблицы стилей, дополнительные ресурсы в виде изображений и видео-файлов), которые непосредственно являются частью исходного документа, но расположены в других местах сети. Далее браузер соединяет все эти ресурсы для отображения их пользователю в виде единого документа — веб-страницы.

после ввода адреса в адресную строку формируется запрос, который состоит из 3 составляющих: 
	метод, 
	путь к ресурсу, 
	версия http-протокола,
	заголовки запроса,
	тело запроса (присутствует на всегда, зависит от метода запроса)

ответ сервера содержит: 
	версию http-протокола, 
	код ответа, 
	человекточитаемый статус ответа, 
	заголовки ответа, 
	тело ответа (присутствует на всегда, зависит от метода запроса)

Пример запроса:
    GET http://ya.ru/index.html HTTP/1.1

Пример ответа:
    HTTP/1.1 200 Ok


глаголы:
	OPTIONS - используется для проверки возможностей сервера. в частности для случая кроссдоменных запросов.
	GET - Используется для запроса содержимого указанного ресурса.
	HEAD - Аналогичен методу GET, за исключением того, что в ответе сервера отсутствует тело.
	POST - предназначен для передачи данных на сервер. при повторении не обязательно возвращает одинаковые результаты. в контексте REST используется для изенения данных. предполагает, что по указанному URI будет производиться обработка передаваемого клиентом содержимого.
	PUT - 
	PATCH - 
	DELETE - удаляет ресурс.


Код состояния информирует клиента о результатах выполнения запроса. 
	1** - информационный
	2** - успешно
	3** - редирект
	4** - ошибка на строне клиента
	5** - ошибка на стороне сервера

	200 - ОК
	404 - not found
	401 - запрещено
	500 - ошибка сервера


Заголовок HTTP (HTTP Header) — это строка в HTTP-сообщении, содержащая разделённую двоеточием пару вида «параметр-значение

HTTP-заголовки разделяются на четыре основных группы:
General Headers (Основные заголовки) — должны включаться в любое сообщение клиента и сервера.
Request Headers (Заголовки запроса) — используются только в запросах клиента.
Response Headers (Заголовки ответа) — присутствуют только в ответах сервера.
Entity Headers (Заголовки сущности) — сопровождают каждую сущность сообщения.

Присутствие тела сообщения в запросе отмечается добавлением к заголовкам запроса поля заголовка Content-Length или Transfer-Encoding.


 для HTTP есть распространённое расширение, которое реализует упаковку передаваемых данных в криптографический протокол SSL или TLS.


===========================================
===========================================
http2 – это бинарный протокол.

В HTTP/2 сервер имеет право послать то содержимое, которое ещё не было запрошено клиентом. Это позволит серверу сразу выслать дополнительные файлы, которые потребуются браузеру для отображения страниц, без необходимости анализа браузером основной страницы и запрашивания необходимых дополнений.

 если клиент запрашивает ресурс X, а сервер предполагает, что клиент наверняка затем попросит ресурс Z(например сопутствующие картинки), отправляет этот ресурс клиенту без просьбы с его стороны.(но это всё происходит с разрешения клиента. и может быть отменено)



===========================================
===========================================
Работает HTTPS просто. Объясню на примере.

Вы кладете важную информацию (логин, пароль, данные карты, персональные данные) в ячейку, «запираете ее на ключ»: ячейка шифрует ваши данные при помощи этого ключа.

Теперь отправляете ее почтой адресату. Адресат получает ячейку-посылку, но открыть ее не может — у него нет ключа. Тогда он запирает (шифрует) ячейку на второй замок и возвращает посылку вам обратно. Вы получаете посылку с двумя замками, при этом ключ к одному у вас есть. Теперь можно отпереть свой замок (расшифровать данные) и отправить посылку обратно еще раз — первоначальному адресату.
Подробнее: https://7bloggers.ru/chto-takoe-http/

===========================================
===========================================
Ку́ки — небольшой фрагмент данных, отправленный веб-сервером и хранимый на компьютере пользователя. Веб-клиент (обычно веб-браузер) всякий раз при попытке открыть страницу соответствующего сайта пересылает этот фрагмент данных веб-серверу в составе HTTP-запроса. 

===========================================
запрос считается кроссдоменным, если через ajax запрашивается ресурсы с другого хоста.

например: пользователь запросил html, скрипты и картинки с хоста domain1. в полученных скриптах есть ajax-запросы к хосту domain2. в этом случае в preflight запросе будут отправлены специальные заголовки, спрашивающие разрешение у domain2 на кросдоменный запрос. если domain2 разрешает такие ответы, то в следующем запросе придёт затребованная информация.

===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================
===========================================