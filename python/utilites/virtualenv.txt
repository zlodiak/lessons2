virtualenv создаёт изолированное окружение со своей версией python, и со своей коллекцией установленных пакетов.

sudo apt install virtualenv

virtualenv --version

virtualenv -p python3.7 venv

source ./venv/bin/activate

deactivate


или так:
python3.7 -m venv project_env
но в этом случает в системе должна быть установлена версия пинона 3.7 или выше


virtualenv -p <тут указать полный путь до исполняемого файла  установленной версии python3.7> venv


==============
все установленные пакеты хрантся изолированно в /venv/lib/python3.4/site-packages

==============
$PATH — это переменная среды, используемая для указания оболочке, где искать исполняемые файлы.

==============
PYTHONPATH содержит один из вариантов путей поиска модулей.

==============
в системе может быть установлено несколько версий python. для них обычно установлены алиасы типа python2, python3. так же существует алиас python он ссылается на версию python по умолчанию.

==============
в системе может быть установлено больше одной версии питона.
обновлять версии опасно, лучше рядом устанавливать новые.
алиасы в .bashrc указывают на конкретные версии: 
alias python3=python3.7
source .bashrc

порядок установки:
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt-get update
sudo apt-get install python3.8

все версии питона искать в:
/usr/bin/
или После ввода python нажать tab и посмотреть доступные версии в репозитории.

при создании вирт среды нужная версия должна быть установлена в системе.
вирт среда у нужной версией питона устанавливается так:
python3.8 -m venv env

внутри вирт среды все пакеты при установки изолированы от среды ОС.

если вирт среда не устанавливается, то нужно доустановить утилиты:
apt install python3-setuptools python3-pip python3.6-venv python3.6-dev
или
sudo apt install python3-setuptools python3-pip python3.6-venv python3.6-dev



==============
==============
==============
==============
==============
==============
==============
==============
==============