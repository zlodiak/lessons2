делегирование это объект отдаёт часть своего поведения другому объекту.

делегироване реализуется на уровне классов и на уровне функций. суть его в том, что фунции могут быть переданы как аргументы.

===================================
пример с классом:

class A:
    def f(self):
        print('A : вызываем метод f')
    def g(self):
        print('A : вызываем метод g')
class C:
    def __init__(self, cl):
        self.a = cl()
    def f(self):
        return self.a.f()
    def g(self):
        return self.a.g()
c = C(A)
c.f() #A: вызываем метод f
c.g() #A: вызываем метод g


===================================
пример с функцией:

def say_hello(name):
    print('Hello,', name)

def say_goodbye(name):
    print('Bye,', name)

def say(func, name):
    func(name)

say(say_hello, 'Ivan')
say(say_goodbye, 'Oleg')

видно, что используются коллбеки.

===================================
в отличие от композиции делегирование передаёт часть ответственности.
а композиция разбивает сущность на части(связь типа "целое-часть")

===================================
короткий пример:

class A:
    def display(self, body):
        print('A: ', body)

class B:
    def display(self, body):
        A().display(body)       

b = B()
b.display(123)

===================================
===================================
===================================
===================================
===================================
===================================
===================================
===================================
===================================
===================================
===================================
===================================
===================================
===================================
===================================