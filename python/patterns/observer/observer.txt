observer это шаблон проектирования, который устанавливает между объектами связь "один ко многим" таким образом, что объект-издатель может посылать сигналы объектам-подписчикам.

в реальной жизни можно провести аналогию с издательством газеты и её подписчиками. вот упрощенный пример, в нём не реализована отписка:

class Newspaper():
    def __init__(self):
        self.observers = []

    def register(self, observer):
        self.observers.append(observer)

    def notify_observers(self, message):
        for observer in self.observers:
            observer.update(message)

class Citizen():
    def __init__(self, name):
        self.name = name

    def update(self, message):
        print('{} получил: {}'.format(self.name, message))

newspaper = Newspaper() 
newspaper.register(Citizen('Иван'))  
newspaper.register(Citizen('Василий')) 
newspaper.notify_observers('Сообщение')

=====================================
важно, что объекты-наблюдателя сами могут являться наблюдаемыми объектами.

=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================