python это много поточный язык. то есть одновременно могут выполняться несколько потоков(функций/программ)

import random
import time
from threading import Thread
 
class MyThread(Thread):  
    def __init__(self, name):
        Thread.__init__(self)
        self.name = name
    
    def run(self):
        amount = 3
        time.sleep(amount)
        msg = "%s is running" % self.name
        print(msg)
    
def create_threads():
    for i in range(5):
        name = "Thread #%s" % (i+1)
        my_thread = MyThread(name)
        my_thread.start()
 
 
if __name__ == "__main__":
    create_threads()

===============================
PIL это блокировщик птоков. если более одного потока имеют доступ к общим данным, то возможна ситуация когда они несогласованно будут менять эти данные.
PIL делает так чтобы в каждый период времени был активен только один поток, а остальные заморожены. эти периоды очень малы.

===============================
перед исполнением исходный код транслируется в байт-код, который хранится в .pyc-файлах. байт-код запускает интерпретатор.

JIT: но возможно во время исполнения программы байт-код компилировать в машинный код, это улучшает скорость выполнения. при этом файлы с машинным кодом в файловой системе не сохраняются и существуют в оперативной памяти только во время исполнения программы.

AOT: это вид компиляции, при которой создаются в файловой системе файлы с машинным кодом.



===============================
процессы выделяются ОС для программ. процесс может взаимодействовать только с дочерними процессами. под процесс выделяется определённое количество памяти.

потоки существуют внутри процесса. они пользуются памятью, которая есть в процессе. они могут взаимодействовать друг с другом.

существуют различные способы переключения потоков:
mutex - в определённый момент активне только один поток, остальные запомнили своё состояние и уснули.
семафор - ограничивает число потоков, которые имеют доступ к ресурсу
событие - при наступлении события управление передаётся другому потоку

===============================
в python потоки переключаются при помощи GIL. этот переключатель срабатывает каждые 5 милисекунд и переключает потоки по очереди. таким образом в определённый момент активен только единственный поток. 

GIL включен по умолчанию, но его можно отключить. в этом случае потоки смогут обращаться в одному ресурсу одновременно.

возможно программно ставить и снимать блокировки с потока. но важно не заблокировать все потоки(deadlock): ситуация, когда ни один поток не имеет права действовать и программа зависает или рушится.


===============================
===============================
===============================
===============================
===============================
===============================
===============================
===============================
===============================
===============================