aqlAlchemy библиотека для работы с различными видами БД через единый интерфейс. вместо sql используются классы, свойства которых представляются собой колонки, а каждый инстанс - строку.

маппинг это отображения правил записанных в терминах объектов в правила, записанные в терминах sql. существует 2 вида маппинга:
1. classical mapping
инстансы создаются на основе metadata:

	metadata = MetaData()

	user = Table('user', metadata,
	    Column('user_id', Integer, primary_key=True),
	    Column('user_name', String(16), nullable=False),
	    Column('email_address', String(60), key='email'),
	    Column('nickname', String(50), nullable=False)
	)

2. declarative mapping:
используются классы, свойства которых это колонки. свойство __tablename__ это имя таблицы.

	Base = declarative_base()

	class Author(Base):
	    __tablename__ = 'authors'
	    id = Column(Integer, primary_key=True)
	    first_name = Column(String(100), nullable=False)
	    last_name = Column(String(100), nullable=False)
	    books = relationship("Book", secondary='association_table')

	    def __repr__(self):
	        return "Author:" + self.first_name


CRUD операции можно завернуть в сессию. это делается для того чтобы была возможность использовать и откатывать трнанзакции.

после завершения работы необходимо закрыть соединение:
	connection = engine.connect()
	connection.close()

====================================
связь many to one и one to many не отличаются ничем. в обоих лучаях используется primary key и foreign key

в связи one to one на foreign key устанавливается ограничение unique. в остальном она реализуется как on to many

в связи mny to many используется дополнительная ассоциативная таблица, которая содержит 2 foreign key

====================================
вообще join это различные виды объединения таблиц.

самый распространённый случай это простой join, который представляет собой декартово произведение множетв. то есть из 2 таблиц составляется одна, которая состоит из записей, которые связаны при помощи PK, FK.

для left outer join к таблице, описанной выше добаляются троки из левой таблицы, которые не имеют соответствия в правой таблице.

для full join составляется таблица из строк, которые имеют соответствие и не имеют. то есть из всех

важно, что не все виды БД поддерживают join в полной мере.

====================================
сделать запрос можно не только средствами ORM, но и испольуя обычный sql.

====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================D