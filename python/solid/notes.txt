есть зависимости, от которых нужно абстрагироваться(инжектить), а есть такие – которые можно использовать напрямую(хардкодить)

=====================================
dependency injection модет быть 3 видов:

1. constructor injection
когда зависимость приходит через конструктор

2. method injection
когда зависимость устанавливается через установочный метод(обычто такая зависимость нужно только в этом методе, но бывают случаи когда она устанавливается дял всего инстанса через self.bla)

2. property injection
зависимость хардкодом присваивается свойству инстанса: prop = new Drive()
такой способ подходит только для зависимостей, которые вряд ли изменятся

=====================================
Инверсия управления (IoC) говорит об изменении потока исполнения, присуща фреймворкам и функциям обратного вызова и не имеет никакого отношения к управлению зависимостями. 

Передача зависимостей (DI) - это инструмент передачи классу его зависимости через конструктор, метод или свойство. 

Принцип инверсии зависимостей (DIP) - это принцип проектирования, который говорит, что классы должны зависеть от высокоуровневых абстракций.

=====================================
Любая сложная система является иерархичной: каждый слой строится на базе проверенного и хорошо работающего слоя более низкого уровня. Это позволяет сосредоточиться в каждый момент времени на ограниченном наборе концепций, не задумываясь о том, как реализованы слои нижнего уровня.

Абстракция выделяет существенные характеристики некоторого объекта, отличающие его от всех других видов объектов и, таким образом, четко определяет его концептуальные границы с точки зрения наблюдателя.

=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================
=====================================