модули:

импортирование состоит из трёх этапов:
1. поиск модуля(согласно приоритету путей)
2. компилирование в байт-код
3. запуск содержимого модуля, в результате которого единожды создаётся с объект с атрибутами(переменными и функциями, которые объявлены только в корне модуля)

поиск существляется(по убыванию приоритета):
1. в каталоге, из которого запущен коревой файл проекта (или каталог откуда была запущена repl)
2. в переменной среды PYTHONPATH 
(~/.profile  export PYTHONPATH=$PYTHONPATH:/home:/home/kalinin: или в /etc/.profile). 
тут подробнее про переменные среды: http://blog.sedicomm.com/2017/11/13/kak-ustanovit-i-otklyuchit-peremennye-lokalnoj-polzovatelskoj-i-sistemnoj-sredy-v-linux/
3. в каталоге системных модулей стандартной библиотеки
4. в файлах с расширением .pht

проверить иерархию путей можно так:
import sys
sys.path

==================================
можно подключать через import и import from
если использовать последний способ, то атрибуты в настоящем модуле перезаписываются. если первый - то к атрибутам нужно обращаться через имя модуля+точку.

можно ограничить импортируемые атрибуты, если их указать в __all__
__all__ = ["echo", "surround", "reverse"] - прописать в модуле, артибуты которго требуется защитить

==================================
при импортировании код модуля выполняется. то есть если есть оператор print, то при импортировании что-нибудь напечатается.

==================================
if __name__ == "__main__":
имеет значение только при импорте. код в этом блоке при импорте не выполнится.

==================================
для перегрузки модуля используется: 
from imp import reload

навпример если в модуле содержатся настройки для подключения к БД, то можно их поменять и перегрузить. при этом не потребуется останавливать программу вообще.

==================================
если каталог представляет собой пакет, то нужно создать в нём пустой файл __init__.py

а импортировать так: 
import пакет.модуль

==================================
==================================