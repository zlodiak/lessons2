модули:

импортирование состоит из трёх этапов:
1. поиск модуля(согласно приоритету путей)
2. компилирование в байт-код
3. запуск содержимого модуля, в результате которого единожды создаётся с объект с атрибутами(переменными и функциями, которые объявлены только в корне модуля)

0. при старте программы на python сначала импортируется встроенный модуль(например: print, tuple, etc.). 
поиск импортированного модуля осуществляется(по убыванию приоритета):
2. ищется файл из каталога, в котором запущен скрипт
3. ищется файл из каталогов, перечисленных в PYTHONPATH(эта переменная экспортируется из файла .profile)
4. в каталоге системных модулей стандартной библиотеки


проверить иерархию путей можно так:
import sys
sys.path

==================================
можно подключать через import и import from
если использовать последний способ, то атрибуты в настоящем модуле перезаписываются. если первый - то к атрибутам нужно обращаться через имя модуля+точку.

можно ограничить импортируемые атрибуты, если их указать в __all__
__all__ = ["echo", "surround", "reverse"] - прописать в модуле, артибуты которго требуется защитить

==================================
При импорте модуля Python выполняет весь код в нём. При импорте пакета Python выполняет код в файле пакета __init__.py, если такой имеется. Все объекты, определённые в модуле или __init__.py, становятся доступны импортирующему.

при импортировании код модуля выполняется. то есть если есть оператор print, то при импортировании что-нибудь напечатается.

==================================
if __name__ == "__main__":
имеет значение только при импорте. код в этом блоке при импорте не выполнится.

==================================
для перегрузки модуля используется: 
from imp import reload

навпример если в модуле содержатся настройки для подключения к БД, то можно их поменять и перегрузить. при этом не потребуется останавливать программу вообще.

==================================
если каталог представляет собой пакет, то нужно создать в нём пустой файл __init__.py

а импортировать так: 
import пакет.модуль

пример:

----geometry
--------__init__.py
--------plainmetry.py
--------stereometry.py
----index.py


index.py:
import geometry.planimetry, geometry.stereometry

a = geometry.planimetry.Rectangle(3, 4)
b = geometry.stereometry.Ball(5)

print(a.square())
print(b.V())


plainmetry.py:
from math import pi, pow
class Rectangle:

__init__.py:
пустой




==================================
 в Python 3.3+ все папки считаются пакетами, поэтому пустые файлы __init__.py больше не нужны.

==================================
==================================
==================================
==================================