функция является объектом. список его атрибутов можно посмотреть так: dir(func_name).

существуют функции высшего порядка, то есть которые могут принимать функцию в качестве аргумента и возвращать функцию(например декоратор).

если функция не заканчивается инструкцией return, то она возвращает None

=======================
map, filter, reduce можно заменить списковыми включениями:

def func(a): return a + 10

s = list(map(func, range(3)))
print(s)

d = [func(n) for n in range(3)]
print(d)

=======================

# map analog
q = [1,2,3,4]
b = [x+10 for x in q]
print(b)

# filter analog
q = [1,2,3,4]
b = [x for x in q if x > 2]
print(b)

# reduce analog
q = [1,2,3,4]
b = sum([x for x in q])
print(b)


=======================
лямбда-функция это короткая безымянная функция, по сути синтаксический сахар:
s = list(map(lambda n: n + 10, range(3)))
print(s)

=======================
если у объекта есть __call__, то его можно вызывать как функцию.

=======================
=======================
=======================
=======================
=======================
=======================
=======================
=======================
=======================
=======================