установка:
sudo apt-get update
sudo apt-get install postgresql postgresql-contrib

старт сервиса:
service postgresql start

войти под суперюзером:
sudo su postgres

войти в cli-режим под суперюзером:
sudo -u postgres psql

узнать версию postgrees:
select version();

создать БД:
CREATE DATABASE database1;

подключиться к ДБ:
psql -U name_of_user -d name_of_database

список баз:
\l

создать таблицу:
CREATE TABLE table1 (
id serial PRIMARY KEY,
company VARCHAR (100),
description TEXT
);

переключиться на БД:
\c joba_finder

вывести текущую БД:
SELECT current_database();

список таблиц:
\dt

создать пользователя:
CREATE USER bo_user WITH PASSWORD 'qwerty';
CREATE USER user1 WITH PASSWORD 'qwerty1';

список пользователей:
\du

дать привилегии пользователю:
GRANT ALL PRIVILEGES ON DATABASE database1 to user1;

вывести содержимое таблицы:
select * from parse_results;

изменить собственника таблицы:
alter table names owner to bo_user;


сделать поле уникальным(возможно, перед этим стоит почистить таблицу):
alter table users ADD UNIQUE (email);


=============================
CREATE DATABASE db_alchemy;
CREATE USER alchemy_user WITH PASSWORD 'qwerty';
GRANT ALL PRIVILEGES ON DATABASE "db_alchemy" to alchemy_user;


=============================
создать пользователя,
сделать его суперюзером,
поставить ему пароль.
в pgadmin ввести его реквизиты.(localhost, 127.0.0.1)

=============================
если нужен первичный ключ автоинкрементный, то его тип при создании должен быть serial.
при записи в таблицу из скрипта название столбца для первичного ключа и соответствующее значение просто не указывать. в результате первичный ключ будет сам увеличиваться.

=============================
если запись в таблицу происходит из скрипта, то после оператции записи нужно выполнить коммит:

try:
    req = 'INSERT INTO test_table (id, description) VALUES (%s,%s)'
    vals = (3, "aaaa")
    db_cursor.execute(req, vals);
    db_conn.commit()     #совершить запись

или заранее прописать настройку:

db_conn = psycopg2.connect(
    database='db_test', 
    user='test', 
    password='qwerty', 
    # user='postgres', 
    # password='postgres',         
    host='localhost'
)
db_conn.autocommit = True  # записи добавляютсяв БД по мере поступления

=============================
select from python:

   connection = psycopg2.connect(user="sysadmin",
                                  password="pynative@#29",
                                  host="127.0.0.1",
                                  port="5432",
                                  database="postgres_db")
   cursor = connection.cursor()
   postgreSQL_select_Query = "select * from mobile"
   cursor.execute(postgreSQL_select_Query)
   print("Selecting rows from mobile table using cursor.fetchall")
   mobile_records = cursor.fetchall() 
   
   print("Print each row and it's columns values")
   for row in mobile_records:
       print("Id = ", row[0], )
       print("Model = ", row[1])
       print("Price  = ", row[2], "\n")
       

=============================
логи тут:
/var/log/postgresql

=============================
=============================
sudo -u postgres psql

create database bottle_out;

CREATE USER bo_user WITH PASSWORD 'qwerty';

GRANT ALL PRIVILEGES ON DATABASE "bottle_out" to bo_user;

\c bottle_out;

CREATE TABLE names (
id serial PRIMARY KEY,
name VARCHAR (100)
);

alter table names owner to bo_user;

INSERT INTO names (name) VALUES ('sergey');
INSERT INTO names (name) VALUES ('alex');
INSERT INTO names (name) VALUES ('andrew');




=============================
=============================
чтобы сделать колоку автоинкрементной нужно сначала создать последовательность через pgaadmin. а затем добавить её:
ALTER TABLE public.parts ALTER COLUMN part_id SET DEFAULT nextval('autoincrement');

=============================
=============================
=============================
=============================
=============================
=============================
=============================
=============================
=============================
=============================
=============================
=============================
=============================


