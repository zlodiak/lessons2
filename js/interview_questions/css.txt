какие бывают виды display?

block:
занимает всё доступное пространство по ширине. можно установить высоту/ширину

inline:
не занимает всё доступное пространство по ширине. нельзя установить высоту/ширину

inline-block:
не занимает всё доступное пространство по ширине. можно установить высоту/ширину

flex:
занимает всё доступное пространство по ширине. внутреннее содержимое выкладывает согласно флекс-модели

inline flex:
не занимает всё доступное пространство по ширине. внутреннее содержимое выкладывает согласно флекс-модели

none:
убирает элемент из документа

===================================
какой приоритет у селекторов?

	style=“”
	#id
	.class
	[attr=value]
	LI
	*

===================================
какие значения бывают у position?

static
блок ведёт себя как обычный блок. left/top/right/bottom не действуют

relative 
блок ведёт себя как обычный блок. left/top/right/bottom действуют относительно первоначального положения

absolute
схлопывается высота/ширина. left/top/right/bottom действуют относительно родителя с position: relative

fixed
схлопывается высота/ширина. left/top/right/bottom действуют относительно окна браузера

sticky
блок ведёт себя как обычный блок. но при прокрутке скролла прилипает к верхней части экрана

===================================
что такое box-sizing?

content-box:
width/height не учитывают padding/margin/border

border-box:
width/height учитывают padding/border, но не margin

===================================
какие значения есть у background-size?

auto:
картинка фона не меняет своего размера

cover:
картинка фона занимает всю ширину блока

contain:
картинка фона занимает всю высоту блока

===================================
что такое БЭМ?

это методика работы со стилями, позволяющая отказаться от копипаста.

блок это независимый кусок разметки, который может быть повторно использован. его название описывает блок, а не внешний вид.

элемент это составная часть блока, которая не может использоваться вне его. название отделяется от имени блока подчеркиваниями.

модификатор определяет внешний вид блока или модификатора. отделяется подчёркиванием.

===================================
что такое flex-shrink и flex-grow?

flex-shrink это количество размеров, на которое сократится ширина блока когда в родительсквом блоке не станет свободного места.
flex-grow это количество размеров, на котрое увеличится ширина блока когда в родительском блоке появится свободное место.







===================================
===================================
===================================
================
какие есть селекторы

	селектор по:

		1. тегу
		2. классу
		3. по идентификатору
		4. по атрибуту
		5. Селектор потомка
		6. универсальный селектор *
		7. комбинированные (через запятую)

================
приоритет (специфичность) селекторов

	* не имеет специфичности

	самый специфичный селектор по id. 
	затем по классу/атрибуту.
	затем по тегу

	но любой селектор, прописанный в style преебивает их.

	а !important имеет наивысший приоритет

	способ формализации можно реализовать через составное число типа:

		id.class-attr.tag

	в результате получится такое:

		1.0.2

	после удаления точек число можно сравнивать.

================
комбинаторы селекторов

	селекторые можно записывать последовательно через определённые символы. 

		через запятую значит, что несколько селекторов будут использовать одно правило.

		через пробел значит, что перечисленные селекторы вложены в html.

		слитно без пробела означает, что все перечисленные селекторы должны быть одновременно у элемента.

		череЗ знак > означает, что правило будет применяться к подходящему потомку.

		череЗ знак + означает, что правило будет применяться к первому соседу (прилипающему).

		череЗ знак ~ означает, что правило будет применяться к указанным соседям (не прилипающим).

================
псевдоэлементы

	это элементы, которых нет в разметке, но которые созданы средствами css.

	::before, ::after

		добавляют контент до или после элемента

	::first-letter

		применяет стили к первой букве текста элемента

	::first-line

		применяет стили к первой строке блочного элемента

	::selection 

		применяет стили к выделенному мушкой тексту

	::placeholder

		стилизация подсказки в инпуте

Псевдоклассы 
	
	это селекторы, которые определяют состояние уже существующих элементов

	:hover

		применяет стили когда пользователь наводит курсор на элемент

	:focus

		применяет стили когда элемент получает фокус

	:link 

		используется для оформления ссылок, которые пользователь ещё никогда не открывал

	:visited 

		используется для оформления ссылок, по которым пользователь прошёл

	:first-child

		применяет стили к первому дочернему элементу внутри блока ul

			li:first-child {
			    border: 2px solid orange;
			}		



	Если не указать тег, класс или id, к которому применяется псевдокласс, то свойство будет применено к любому возможному элементу, который способен иметь этот псевдокласс:			

================
Псевдоклассы группы :nth-child

	При помощи этих псевдоклассов можно удобно выбирать элементы по их порядковому номеру внутри родительского элемента.

	аргументом может быть число, представляющее из себя порядковый номер. нумерация ведётся с 1

	аргументом может быть odd/even, тогда будут выбираться нечётные/чётные элементы

	аргументом может быть выражение и тогда можно, например, выбрать каждый третий элемент:

		:nth-child(3n)

		Вместо n будет подставляться 0, затем 1, 2 и так далее.

================
как браузер читает селекторы

	справа налево. потому что браузер после построения DOM и подгрузки стилей пытается пройтись по каждому элементу и применить к нему стиль.

	а пользователь когда пишется css имеет противоположную задачу. то есть ему нужно написать селектор и для него найти элемент. поэтому пользователь пишет селектор слева направо.

================
display

	block - элемент занимает 100% ширины и располагается под предыдущим элементом.

	inline - элемент не занимает 100% ширины и есть возможность выстроить его горизонтально с соседними inline-элементами. если он не умещается полностью в ширину родителя, то часть переносится на новую строку

	inline-block - в потоке ведёт себя как inline, но есть возможность устанавливать высоту и ширину. то есть не только его содержимое определяет его форму.

	table - дочерние элементы располагаются как ячейки таблицы, но для этого их нужно пометить display: table-row, display: table-cell: 

	flex - на потомков распространяются flex-правила

	grid - на потомков распространяются grid-правила