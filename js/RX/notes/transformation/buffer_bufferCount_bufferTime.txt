есть исходный observable и переданный в buffer агрумент. 
из первого observable значения накапливаются в массив. как только приходит значение из второго observable, этот массив передаётся в subscribe

    interval(1000).pipe(
     buffer(
       of('Show buffer').pipe(delay(5000))
     )
    ).subscribe(vl => console.log(vl));
    
    //Результат: [0, 1, 2, 3]

========================
bufferCount делает то же самое, но в bufferCount аргументом передаётся количество элементов массива:

    interval(1000).pipe(
     bufferCount(5)
    ).subscribe(vl => console.log(vl));
    
    //Результат: [0, 1, 2, 3, 4], [5, 6, 7, 8, 9], ...

========================
bufferTime делает то же самое, но в bufferTime аргументом передаётся количество миллисекунд

    interval(500).pipe(
     take(4),
     bufferTime(1100)
    ).subscribe(vl => console.log(vl));
    
    //Результат: [0,1], [2,3]


========================
========================
========================
========================
========================
========================
========================
========================