1:
эффекты нужны для выполнения нечистых функций. например, нужно изменить значение в БД, и затем изменить значение в сторе. эти две операции нельзя поместить в релюсер потому что http-запрос нарушит чистоту редюсера.

2:
нужно сначала диспатчит экшен для эффекта, передав в него значения для обычного экшена. в эффекте произойдёт http-запрос, извлечение данных и обогащение ими ранее переданного значения. после этого вызывается обычные экшен, в который передаётся обогащённое значение.

3:
затем отрабатывает обычный экшен. если бы не нужно было делать http-запрос, то второй пункт нужно было пропустить.

====================================
export const addUserNameActionType = '[userName] Add UserName';
export const loadPropertiesActionType = '[userName] Load Properties';

export const addUserNameAction = createAction(
  addUserNameActionType,
  props<{ userName: string }>()
);

export const loadPropertiesAction = createAction(
  loadPropertiesActionType,
  props<{ userName: string }>()
);


====================================
@Injectable()
export class UserNameEffects {
 
  loadProperties$ = createEffect(() => this.actions$.pipe(
    ofType(loadPropertiesActionType),
    mergeMap((userNameAct: IUserNameAction) => this.propertyService.getProperties()
      .pipe(
        map(properties => {
          const random = Math.floor(Math.random() * 3);
          // пинается экшен обычный
          return addUserNameAction({ 
            userName: properties[random].title + ' ' + userNameAct.userName 
          })
        }),
        catchError(() => EMPTY)
      ))
    )
  );
 
  constructor(
    private actions$: Actions,
    private propertyService: PropertyService
  ) {}
}

====================================
компонент:

	this.store.dispatch(loadPropertiesAction({ userName }));	// пинается экшен эффекта

====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================