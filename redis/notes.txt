установить:
redis-cli,
redis-server,

установить для того чтобы из питона работать с редис:
python -m pip install redis

пример:
	>>> import redis
	>>> r = redis.Redis()
	>>> r.mset({"Croatia": "Zagreb", "Bahamas": "Nassau"})
	True
	 
	>>> r.get("Bahamas")
	b'Nassau'


статус/стоп/старт:
sudo systemctl status redis
sudo systemctl stop redis
sudo systemctl start redis



Результаты поиска
Выделенное описание из Интернета
To start Redis client, open the terminal and type the command redis-cli.

select <DB_num: intrger> for change DB


=====================
Установка пароля
Для увеличения безопасности хранилища рекомендуем установить пароль, для этого откройте файл конфигурации:

sudo vi /etc/redis/redis.conf
Найдите следующую строку:

# requirepass foobared
Раскомментируйте строку, удалив #, и измените значение параметра requirepass на безопасный пароль:

requirepass <пароль>
Перезагрузите СУБД:

sudo systemctl restart redis.service

redis-cli -a <пароль>

=====================
команды redis-py:

#добавляем модуль redis
import redis

# задаем параметры базы redis: находится на localhost, стандартный порт 6379, номер базы 1 (по дефолту создается сразу 16: от 0 до 15)
r = redis.StrictRedis(host='localhost', port=6379, db=1)

#присваиваем переменной test1 значение 5
r.set('test1',5)

#получаем из переменной test1 значение
r.get('test1')

#уменьшаем значение test1 на 2 (если значение является int)
r.decr('test1',2) # выдаст 3

#увеличивает значение test1 на 2 (если значение является int)
r.incr('test1',2) # выдаст 5

#переменная test1 будет удалена через 30 секунд
r.expire('test1',30)

#переменная test1 будет удалена
r.delete('test1')

#сохранить все данные в памяти на диск
r.bgsave()

#очистить всю выбраную базу
r.flushdb()

=====================
вставить в список слева:
r.lpush("mylist", 2, 3)

вывести список с нулевой позиции до -1. то есть все элементы:
r.lrange('mylist', 0 , -1)

получить все ключи:
keys *



=====================
соглашение о пространстве имён:
r.set('greeting:1', 'Hello') 
r.set('greeting:2', 'Hi') 
r.set('farewell:1', 'Goodbye') 

=====================
пайплайны нужны для того чтобы буферизировать несколько операций и затем выполнить их все вместе.

транзакции осуществляются при помощи mulyi/execute

=====================
=====================
пример транзакции с исключением. в результате не выполняется вся транзакция:

import redis

redis_instance = redis.Redis(db=5)

try:
    with redis_instance.pipeline() as pipe:
        pipe.multi()
        pipe.set('valueA:3', 123)
        pipe.set('valueB:3', 123)
        pipe.hset('valueC:3', None, 'h123')
        pipe.execute()
        redis_instance.bgsave()    
        print('----')
except:
    print('===== exception')


=====================
=====================
=====================
=====================
=====================
=====================
=====================
=====================
=====================
=====================
=====================
=====================
=====================
=====================
=====================