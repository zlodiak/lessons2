образ это набор зафиксированных слоёв. например: linux + python + djano. его можно создать самому или взять готовый из репозитория докера.

контейнер это набор незафиксированных слоёв(их можно менять). например образ из предыдущего пункта + проект на django. у одного образа может быть несколько контейнеров, то есть несколько программ могут работать в одном окружении.

====================================
echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" | sudo tee /etc/apt/sources.list.d/docker.list

sudo apt-get install docker.io

docker --version

sudo service docker start

sudo docker info

====================================
добавим докер-пользователя:
sudo usermod -a -G docker kalinin

-a добавить в группу
-G имя группы
kalinin имя пользователя

то есть после установки докера автоматически создалась группа docker. если наш пользователь(под которым мы вошли в ОС) находится в ней, то не требуется каждый раз использовать sudo

но если группы нет, то в доке советуют так её создать:
$ sudo groupadd docker
$ sudo usermod -aG docker $USER

здесь $USER это имя текущего пользователя системы из переменных среды

====================================
посмотреть какие образы существуют и какие контейнеры запущены:
sudo docker images
sudo docker ps
sudo docker ps -a

====================================
sudo docker run hello-world

сначала этот образ будет искаться на локальной машине.
если не найдётся, то он будет скачан с хаба.
если на хабе нет, то, возможно, стоит залогиниться из консоли чтобы загрузить из частного репозитория.

sudo docker images
покажет, что образ скачался

====================================
в /etc/group есть список всех групп пользователей этой ОС. в том числе и docker, который мы создали выше.
например в группе sudo прописан пользователь, под котрым мы залогинились в ОС.

====================================
докер состоит из клиента и сервера.
клиент это командная оболочка. она при помощи API связана с демоном, который управляет всем, что связано с докером.
клиентов может быть несколько.

====================================
чтобы загрузить образ из репозитория нужно зайти на докерхаб и сделать:
docker pull ubuntu

при этом не обязательно регистрироваться.
но чтобы в будущем закачать свой образ регистрация необходима

====================================
после запуска docker run ubuntu образ запускается и сразу выключается. это свыязано с тем, что образ не связан ни с каким контейнером, который мог бы продолжать работать.

====================================
создадим и запустим свой образ. 

создадим отдельный каталог и в нём Dockerfile.
содержание этого файлы будет выполняться каждый раз при запуске образа:

FROM ubuntu
RUN apt-get -y update && apt-get install -y htop
CMD ["/bin/sh", "-c", "export TERM=xterm && /usr/bin/htop"]

как видите, на основе образа ubuntu мыустанавливаем в системы утилиту htop.
в последней строке запускаем её, указав при этом тип терминала.

билдим образ следующей командой:
docker build -t ubuntu-htop .

в результате docker images выведет в списке новый образ.

его можно запустить docker run ubuntu-htop

но он отработает и сразу выключится.

если не выключился, а нужно выключить, то использовать команду:
docker stop 1ad65a5438fc
при этом id брать из docker ps

====================================
переименовать перед загрузкой на хаб:
docker tag 22f011711fee docktor888/ubuntu-htop:latest

важно, что первая часть имени должна быть как логин на хабе

выгрузка на хаб:
docker push docktor888/ubuntu-htop:latest


====================================
удалить образ:
docker rmi -f 7b275fda0e52
id брать из списка docker images

====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================
====================================