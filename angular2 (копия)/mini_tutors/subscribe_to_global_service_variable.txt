допустим, есть глобальный сервис, который содержит переменную. нужно иметь возможнть из любого компонента подписаться на изменение этой переменной

======================+
сервис:
import { Injectable } from '@angular/core';
import { Response, Headers, URLSearchParams } from '@angular/http';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';

import { Observable } from 'rxjs/Observable';

@Injectable()
export class GlobalVarsService {

	private moneyBox: any[];
  //private isVisibleSpinner: boolean = false;
	private isVisibleSpinner = new BehaviorSubject(false);

  constructor() { 
  	this.moneyBox = localStorage.moneyBox ? JSON.parse(localStorage.moneyBox) : [];
  }

  getMoneyBox(): any[] {
  	return this.moneyBox;
  };

  addMoneyBox(arr): void {
  	this.moneyBox.push(arr);
  	localStorage.moneyBox = JSON.stringify(this.moneyBox);
  };  

  getSpinnerState(): Observable<boolean> {
    console.log('this.isVisibleSpinner', this.isVisibleSpinner);
  	return this.isVisibleSpinner;
  }; 

  /*setSpinnerState(state): void {
    console.log('setSpinnerState', state);
  	this.isVisibleSpinner = state;
  };*/    

  setSpinnerState(state): void {
    console.log('setSpinnerState', state);
    this.isVisibleSpinner.next(state);
  };  

}


======================+
компонент:
import { Component } from '@angular/core';

import { Response } from '@angular/http';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/map'

import { GlobalVarsService } from './services/global-vars.service';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {

	private isVisibleSpinner: boolean;
  
  constructor(private globalVarsService: GlobalVarsService) {  
  	//this.isVisibleSpinner = this.globalVarsService.getSpinnerState();

		this.globalVarsService.getSpinnerState().subscribe(data => {
		  console.log('subscribe', data);
		  this.isVisibleSpinner = data;
		});  	
  }
}



======================+
шаблон компонента:
навигация:
<div class="nav">
  <a [routerLink]="['/select']">select</a>
  <a [routerLink]="['/output']">output</a>
</div>


<router-outlet></router-outlet>

<div class="spinner-backdrop" *ngIf="isVisibleSpinner"></div>
<div class="spinner-area" *ngIf="isVisibleSpinner">
    <span class="spinner">loading...</span>
</div>

======================+
======================+
https://ru.stackoverflow.com/questions/717679/%D0%9A%D0%B0%D0%BA-%D0%BF%D0%BE%D0%B4%D0%BF%D0%B8%D1%81%D0%B0%D1%82%D1%8C%D1%81%D1%8F-%D0%BD%D0%B0-%D0%B8%D0%B7%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D0%B9

======================+
если возникает ошибка "ERROR Error: ExpressionChangedAfterItHasBeenCheckedEr"
то:
  constructor(private globalVarsService: GlobalVarsService) {  
		this.globalVarsService.getSpinnerState().subscribe(data => setTimeout(() => {
		  console.log('subscribe', data);
		  this.isVisibleSpinner = data;
		}, 0));  	
  }

======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+
======================+