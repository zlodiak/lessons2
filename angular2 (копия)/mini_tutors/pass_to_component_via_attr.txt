можно передать данные из одного компонента в другой:

если в шаблоне первого компонента выводится {{records}}



===========================
то можно создавть второй компонент и обозначит входящие:
import { Component, OnInit, Input } from '@angular/core';

@Component({
  selector: 'app-render',
  templateUrl: './render.component.html',
  styleUrls: ['./render.component.css']
})
export class RenderComponent implements OnInit {

  constructor() { }

  ngOnInit() {
  }

  @Input() renderData: Object;

}


===========================
и передавать данные из компонента 1 и шаблон компонента 1, а затем в компонета 2.
 при этом шаблон компонента 1 будет такой:
 <div class="statistic-area">
	<app-render [renderData]="records"></app-render>
</div>



===========================

а шаблон компонента 2 такой:
<table class="statistic-table" border="1" celpadding="8">
  <thead>
    <tr>
      <td>Дата</td>
      <td>Время тренировки</td>
      <td>Сердний пульс</td>
      <td>Максимальный пульс</td>
      <td>Примечания</td>
    </tr>
  </thead>
  <tbody>
    <tr id="tableBody" *ngFor="let record of renderData; let i = index">
    	<td>{{ record.fields.created_date | date:"dd-MM-yyyy" }}</td>
    	<td>{{ record.fields.training_time_min }}</td>
    	<td>{{ record.fields.pulse_avg_bpm }}</td>
    	<td>{{ record.fields.pulse_max_bpm }}</td>
    	<td>{{ record.fields.desc | ellipsis:20 }}</td>
    </tr>
  </tbody>
</table>

===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================
===========================