реализуем в главном компоненте директиву спинера. которая будет реагировать на изменения переменной в глобальном объекте.
то есть на всё приложение будет один спиннер.


глобальный сервис:
import { Injectable } from '@angular/core';
import { Response, Headers, URLSearchParams } from '@angular/http';

import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';

@Injectable()
export class GlobalVarsService {

	private moneyBox: any[];
	private isVisibleSpinner = new BehaviorSubject(false);

  constructor() { 
  	this.moneyBox = localStorage.moneyBox ? JSON.parse(localStorage.moneyBox) : [];
  }

  getMoneyBox(): any[] {
  	return this.moneyBox;
  };

  addMoneyBox(arr): void {    
  	this.moneyBox.push(arr);
  	localStorage.moneyBox = JSON.stringify(this.moneyBox);
  };  

  getSpinnerState(): Observable<boolean> {
    console.log('this.isVisibleSpinner', this.isVisibleSpinner);
  	return this.isVisibleSpinner;
  };  

  setSpinnerState(state): void {
    console.log('setSpinnerState', state);
    this.isVisibleSpinner.next(state);
  };  

}


=======================
шаблон главного компонента:
<div class="nav">
  <a [routerLink]="['/select']">select</a>
  <a [routerLink]="['/output']">output</a>
</div>


<router-outlet></router-outlet>

<div *myUnless="isVisibleSpinner">
	<div class="spinner-backdrop"></div>
	<div class="spinner-area">
	    <span class="spinner">loading...</span>
	</div>	
</div>





=======================
.spinner-backdrop{
	width: 100vw;
	height: 100vh;
	position: fixed;
	left: 0;
	top: 0;
	background: rgba(255, 255, 255, 0.6);
}

.spinner-area{
	width: 100vw;
	height: 100vh;
	position: fixed;
	left: 0;
	top: 0;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	align-items: center;	
}

	.spinner{

	}

=======================
главный компонент. здесь есть подписка на изменение переменной глобального сервиса:
import { Component } from '@angular/core';

import { Response } from '@angular/http';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/map'

import { GlobalVarsService } from './services/global-vars.service';


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {

	private isVisibleSpinner: boolean;
  
  constructor(private globalVarsService: GlobalVarsService) {  
		this.globalVarsService.getSpinnerState().subscribe(data => setTimeout(() => {
		  console.log('subscribe', data);
		  this.isVisibleSpinner = data;
		}, 0));  	
  };
}





=======================
директива:

import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';


@Directive({ selector: '[myUnless]'})
export class UnlessDirective {

  constructor(
    private templateRef: TemplateRef<any>,
    private viewContainer: ViewContainerRef) { }

  @Input() set myUnless(isVisibleSpinner: boolean) {
    if (isVisibleSpinner) {
      this.viewContainer.createEmbeddedView(this.templateRef);
    } else if (!isVisibleSpinner) {
      this.viewContainer.clear();
    }
  }
}


=======================
=======================
=======================
=======================
=======================
=======================
=======================
=======================
=======================
=======================
=======================
=======================